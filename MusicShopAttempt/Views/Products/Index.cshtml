@model IEnumerable<MusicShopAttempt.Data.Product>
@inject SignInManager<User> signInManager;
@using MusicShopAttempt.Data;
@using Microsoft.AspNetCore.Identity;
@{ ViewData["Title"] = "Index"; }


<h1>Index</h1>
@if (signInManager.IsSignedIn(User) && User.IsInRole(Role.Admin.ToString()))
{
<p>
    <a asp-action="Create">Create New</a>
</p>
}
@foreach (var item in Model)
{
<div class="col-mg-3 col-3 mb-3 float-left">
    <div class="product-thumb">
            <img src="~/images/@item.Picture" class ="product-image" alt="">
        <div class="product-top d-flex">
            <span class="product-alert me-auto">@Html.DisplayFor(modelItem => item.Promo)</span>
        </div>
        <div class="product-info d-flex">
            <div>
                <h5 class="product-title mb-0">
                    <a asp-action="Details" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.Title)</a>
                </h5>
            </div>
            <small class="product-price text-muted ms-auto">@Html.DisplayFor(modelItem => item.Price)</small>
        </div>
    </div>
</div>
}

@*<table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Quantity)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Picture)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Price)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EntryDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Status)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Promo)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Holder)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Category)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Singer)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Genre)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Quantity)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Picture)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Price)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EntryDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Status)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Promo)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Holder)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Category)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SingerId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.GenreId)
        </td>*@



@*@if (signInManager.IsSignedIn(User) && User.IsInRole("Admin"))
        {

    <td>
        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
    </td>
    }*@



